{"version":3,"sources":["utils.ts","components/PaginationItem/PaginationItem.tsx","components/Pagination/Pagination.tsx","components/PaginationForm/PaginationForm.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","PaginationItem","page","currentPage","handleOnClick","className","cn","active","href","onClick","Pagination","total","perPage","onPageChange","setCurrentPage","pageNumbers","Math","ceil","disabled","map","length","PER_PAGE_OPTIONS","PaginationForm","handlePerPageChange","id","value","onChange","option","htmlFor","items","App","useState","setPerPage","start","end","visibleItems","slice","event","selectedOption","Number","target","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cc444ba.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { FC } from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  page: number;\n  currentPage: number;\n  handleOnClick: (page: number) => void;\n}\n\nexport const PaginationItem: FC<Props> = ({\n  page,\n  currentPage,\n  handleOnClick,\n}) => {\n  return (\n    <li\n      className={cn('page-item', {\n        active: page === currentPage,\n      })}\n    >\n      <a\n        data-cy=\"pageLink\"\n        className=\"page-link\"\n        href={`#${page}`}\n        aria-disabled={currentPage === page}\n        onClick={() => handleOnClick(page)}\n      >\n        {page}\n      </a>\n    </li>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { PaginationItem } from '../PaginationItem';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  setCurrentPage: (page: number) => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  setCurrentPage,\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, pages);\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < pageNumbers.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handleOnClick = (page: number) => {\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map(page => (\n        <PaginationItem\n          key={page}\n          page={page}\n          currentPage={currentPage}\n          handleOnClick={handleOnClick}\n        />\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === pageNumbers.length,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageNumbers.length}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  perPage: number;\n  handlePerPageChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nconst PER_PAGE_OPTIONS = [3, 5, 10, 20];\n\nexport const PaginationForm: FC<Props> = ({\n  perPage,\n  handlePerPageChange,\n}) => {\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-3 col-sm-2 col-xl-1\">\n        <select\n          data-cy=\"perPageSelector\"\n          id=\"perPageSelector\"\n          className=\"form-control\"\n          value={perPage}\n          onChange={handlePerPageChange}\n        >\n          {PER_PAGE_OPTIONS.map(option => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n        items per page\n      </label>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { PaginationForm } from './components/PaginationForm';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const start = (currentPage - 1) * perPage;\n  const end = currentPage * perPage > items.length\n    ? items.length\n    : currentPage * perPage;\n\n  const visibleItems = items.slice(\n    (currentPage - 1) * perPage,\n    currentPage * perPage,\n  );\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedOption = Number(event.target.value);\n\n    setPerPage(selectedOption);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${items.length})`}\n      </p>\n\n      <PaginationForm\n        perPage={perPage}\n        handlePerPageChange={handlePerPageChange}\n      />\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n        setCurrentPage={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}